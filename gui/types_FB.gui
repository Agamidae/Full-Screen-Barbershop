types newFBTypes {#

	type button_FB_list = button_normal {
		texture = "gfx/interface/buttons/button_standard.dds"
		size = { 200 33 }
		gfxtype = togglepushbuttongfx
		effectname = "NoHighlight"

		upframe = 1
		uphoverframe = 2
		uppressedframe = 3
		downframe = 4
		downhoverframe = 4
		downpressedframe = 4
		disableframe = 7

		spriteType = Corneredtiled
		spriteborder = { 3 3 }
		framesize = { 249 78 }

		buttonText = {
			text_single = {
				size = { 100% 100% }
				autoresize = no
				margin = { 10 0 }
				block "margin" {}
				align = nobaseline
				default_format = "#clickable"
				max_width = 170
			}
		}
		block "bg_preview" {
		}

		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/buttons/button_standard_overlay.dds"
			spriteType = Corneredstretched
			spriteborder = { 3 3 }
			blend_mode = overlay
			alpha = 0.3
		}

		block "disabled"
		{
			highlight_icon = {
				size = { 100% 100% }
				gfxtype = togglepushbuttongfx
				effectname = "NoHighlight"
				texture = "gfx/interface/buttons/button_disabled_stripes.dds"
				spriteType = Corneredtiled
				spriteborder = { 2 2 }
				framesize	= { 238 63 }

				upframe = 1
				uphoverframe = 1
				uppressedframe = 1
				downframe = 1
				downhoverframe = 1
				downpressedframe = 1
				disableframe = 2

				alpha = 0.4

				modify_texture = {
					name = "overlay"
					texture = "gfx/interface/buttons/button_standard_overlay.dds"
					spriteType = Corneredstretched
					spriteborder = { 3 3 }
					blend_mode = overlay
				}

				block "button_standard_mouseover" {}
			}
		}

		highlight_icon = {
			size = { 100% 100% }
			gfxtype = togglepushbuttongfx
			effectname = "NoHighlight"
			texture = "gfx/interface/buttons/button_mouseover.dds"
			spriteType = Corneredstretched
			spriteborder = { 20 20 }
			framesize	= { 238 63 }

			upframe = 1
			uphoverframe = 2
			uppressedframe = 1
			downframe = 1
			downhoverframe = 1
			downpressedframe = 1
			disableframe = 1

			alpha = 0.5

			block "button_standard_mouseover" {}
		}

		margin_widget = {
			size = { 100% 100% }
			margin = { 3 3 }

			block "vignette"
			{
				icon = {
					name = "vignette"
					size = { 100% 100% }
					alpha = 0.2
					texture = "gfx/interface/component_masks/mask_vignette.dds"
					color = { 0.15 0.15 0.15 1 }
				}
			}
		}
	}

	type trait_button = button_FB_list {
		down = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).End)]"
		onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
		# enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( Character.MakeScope ).End)]"

		icon = {
			parentanchor = right
			size = { 33 33 }
			block "icon" {
			}
		}
	}

	type bg_button = button_FB_list {

		size = { 175 33 }
		allow_outside = yes

		onclick = "[PdxGuiTriggerAllAnimations('hide_bg')]"
		# onrightclick = "[PdxGuiTriggerAllAnimations('hide_bg')]"
		# tooltip = "right_click_light"
		# button_ignore = none
		blockoverride "bg_preview" {
			block "picture_highlight" {
				onmousehierarchyleave = "[PdxGuiWidget.FindChild('picture').TriggerAnimation('dehighlight')]"
				onmousehierarchyenter = "[PdxGuiWidget.FindChild('picture').TriggerAnimation('highlight')]"
			}

			block "default" {
			}

			icon = {
				parentanchor = right
				size = { 45% 100% }

				name = "picture"
				alpha = 0.6
				state = {
					name = highlight
					alpha = 1
				}
				state = {
					name = dehighlight
					alpha = 0.6
				}
				background = {
					block "picture" {

					}
					using = Mask_Rough_Edges
					fittype = centercrop
					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
						blend_mode = alphamultiply
						rotate_uv = 3
					}
				}
			}
		}

		button = {
			block "light" {
				visible = no
			}
			tooltip = "lighting"

			button_icon = {
				texture = "gfx/sun_filled.png"
				parentanchor = center
				size = { 20 20 }
				alwaystransparent = yes
			}
			alpha = 0.9
			size = { 30 30 }
			position = { 30 0 }
			parentanchor = right|vcenter
			onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation('show')]"
			onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation('hide')]"
		}
	}

    type poses_list = scrollarea {
		layoutpolicy_vertical = expanding

		scrollbarpolicy_horizontal = always_off
		scrollbar_vertical = { using = Scrollbar_Vertical }

		scrollwidget = {
            flowcontainer = {
                direction = vertical
                ignoreinvisible = yes
                parentanchor = hcenter
                spacing = 5
                min_width = 200

                datamodel = "[GetGlobalList('pose_categories')]"

                item = {
                    flowcontainer = {
                        direction = vertical
                        ignoreinvisible = yes
                        parentanchor = hcenter
                        spacing = 5
                        min_width = 200
						visible = "[Not(IsDataModelEmpty(GetGlobalList(Scope.GetFlagName)))]"

                        button_category = {
                            blockoverride "text" { text = "[Localize(Concatenate( Scope.GetFlagName, '_name'))]" }
                            onclick = "[GetVariableSystem.Toggle(Scope.GetFlagName)]"
                            blockoverride "frame" { frame = "[Select_int32( GetVariableSystem.Exists(Scope.GetFlagName), '(int32)1', '(int32)2')]" }
                        }

                        sub_poses_list = {
                            blockoverride "datamodel" {
                                datamodel = "[GetGlobalList(Scope.GetFlagName)]"
                            }
                            visible = "[Not(GetVariableSystem.Exists(Scope.GetFlagName))]"
                        }

                        sub_poses_list_big = {
                            blockoverride "datamodel" {
                                datamodel = "[GetGlobalList(Scope.GetFlagName)]"
                            }
                            visible = "[Not(GetVariableSystem.Exists(Scope.GetFlagName))]"
                        }
                    }
                }
    		}
        }
	}

    type sub_poses_list = container {
        ignoreinvisible = yes

        flowcontainer = {
            block "datamodel" {}
            visible = "[Not(GetVariableSystem.Exists('big_portraits'))]"
            direction = vertical
            spacing = -2

            item = {
                button_FB_list = {
                    text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]"
                    datacontext = "[GetScriptedGui('barber_pose')]"
                    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).AddScope('pose', MakeScopeFlag(Scope.GetFlagName)).End)]"
                    down = "[EqualTo_string(AddTextIf(  Character.MakeScope.Var('barber_pose').IsSet, Character.MakeScope.Var('barber_pose').GetFlagName), Scope.GetFlagName)]"
                    # I tried ui variables first
                    # down = "[GetVariableSystem.HasValue( Character.GetFullNameNoTooltip, Scope.GetFlagName)]"
                    # onclick = "[GetVariableSystem.Set( Character.GetFullNameNoTooltip, Scope.GetFlagName)]"
                }
            }
        }
    }

    # type button_pose_big

    type sub_poses_list_big = container {
        ignoreinvisible = yes

        dynamicgridbox = {
            position = { 0 -7 }
            block "datamodel" {}
            datamodel_wrap = 2
            flipdirection = yes
            visible = "[GetVariableSystem.Exists('big_portraits')]"

            item = {
                button_standard = {
                    text = ""
                    datacontext = "[GetScriptedGui('barber_pose')]"
                    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).AddScope('pose', MakeScopeFlag(Scope.GetFlagName)).End)]"
                    down = "[EqualTo_string(AddTextIf(  Character.MakeScope.Var('barber_pose').IsSet, Character.MakeScope.Var('barber_pose').GetFlagName), Scope.GetFlagName)]"
                    size = { 100 180 }
                    portrait_full = {
                        position = { 0 -1 }
                        blockoverride "portrait_button"
            			{
            				portrait_texture = "[Character.GetPortrait(GetVariableSystem.Get('environment'), Concatenate(GetPlayer.Custom('zoom_level'), Character.Custom('camera_angle')), Scope.GetFlagName, PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            			}
                    }
                    text_label_center = {
                        max_width = 80
                        parentanchor = hcenter
                        position = { 0 5 }
                        text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]"
                    }
                }
            }
        }
    }

    type defaultPose = button_FB_list {
        size = { 200 33 }
        text = "default"
        visible = "[GetScriptedGui('choose_pose').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
        onclick = "[GetScriptedGui('default_pose').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
        down = "[Not(Character.MakeScope.Var('barber_pose').IsSet)]"
    }

	type button_category = button {
		size = { 100% 30 }

		background = {
            texture = "gfx/interface/component_tiles/background_area_light.dds"
            texture_density = 1

			using = Mask_Rough_Edges
			margin = { 10 1 }
            modify_texture = {
                name = "mask"
                texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
                spriteType = Corneredstretched
                spriteborder = { 0 0 }
                blend_mode = alphamultiply
            }
        }


		hbox = {
			layoutpolicy_horizontal = expanding
			spacing = 5
			button_expand = {
				size = { 22 22 }
				alwaystransparent = yes
				block "frame" {
					visible = no
					frame = "[Select_int32( GetVariableSystem.Exists('big_throneroom'), '(int32)1', '(int32)2')]"
				}
			}

			button_checkbox = {
				size = { 25 25 }
				alwaystransparent = yes
				block "check" {
					visible = no
				}
			}

			text_single = {
				name = "category"
				layoutpolicy_horizontal = expanding
				max_width = 170
				align = nobaseline
				default_format = "#clickable"

				block "text"
				{
					text = "test"
				}
			}
		}
	}

	type traits_list = vbox {
		spacing = 10

		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding
		scrollarea = {
			layoutpolicy_vertical = expanding

			scrollbarpolicy_horizontal = always_off
			scrollbar_vertical = { using = Scrollbar_Vertical }

			scrollwidget = {

				flowcontainer = {
					direction = vertical
					parentanchor = hcenter
					spacing = -2
					ignoreinvisible = yes
					# ignoreinvisible = yes

					trait_button = {
						text = "trait_beauty_good_2"
						datacontext = "[GetScriptedGui('beauty')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/beauty_good_2.dds"
						}
					}
					trait_button = {
						text = "trait_beauty_bad_2"
						datacontext = "[GetScriptedGui('ugly')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/beauty_bad_2.dds"
						}
					}
					trait_button = {
						text = "trait_drunkard"
						datacontext = "[GetScriptedGui('drunkard')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/drunkard.dds"
						}
					}

					widget = {
						size = { 0 12 }
					}

					trait_button = {
						text = "trait_one_eyed"
						datacontext = "[GetScriptedGui('one_eyed')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/one_eyed.dds"
						}
					}
					trait_button = {
						text = "trait_blind"
						datacontext = "[GetScriptedGui('blind')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/blind.dds"
						}
					}
					trait_button = {
						text = "trait_disfigured"
						datacontext = "[GetScriptedGui('disfigured')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/disfigured.dds"
						}
					}


					widget = {
						size = { 0 12 }
					}

					trait_button = {
						text = "trait_scarred"
						datacontext = "[GetScriptedGui('scarred')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/scarred.dds"
						}
					}
					trait_button = {
						text = "trait_wounded_1"
						datacontext = "[GetScriptedGui('wounded_1')]"
						blockoverride "icon" {
							texture = "gfx/interface/icons/traits/wounded_1.dds"
						}
					}

                    widget = {
                        size = { 0 12 }
                    }

                    trait_button = {
                        text = "trait_ill"
                        datacontext = "[GetScriptedGui('illness')]"
                        blockoverride "icon" {
                            texture = "gfx/interface/icons/traits/ill.dds"
                        }
                    }
                    trait_button = {
                        text = "trait_consumption"
                        datacontext = "[GetScriptedGui('tuberculosis')]"
                        blockoverride "icon" {
                            texture = "gfx/interface/icons/traits/consumption.dds"
                        }
                    }

                    widget = {
                        size = { 0 12 }
                    }

                    button_category = {
                        blockoverride "text" {
                            text = "unrealistic_options"
                        }
                        blockoverride "frame" {
                            frame = "[Select_int32( GetVariableSystem.Exists('unrealistic_options'), '(int32)2', '(int32)1')]"
                        }
                        onclick = "[GetVariableSystem.Toggle('unrealistic_options')]"
                    }

                    widget = {
                        size = { 0 12 }
                    }


					flowcontainer = {
						direction = vertical
						spacing = -2
						parentanchor = hcenter
                        visible = "[GetVariableSystem.Exists('unrealistic_options')]"

						# enabled = "[Not(InDebugMode)]"

						trait_button = {
							text = "trait_albino"
							datacontext = "[GetScriptedGui('albino')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/albino.dds"
							}
						}
						trait_button = {
							text = "trait_dwarf"
							datacontext = "[GetScriptedGui('dwarfism')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/dwarf.dds"
							}
						}
						trait_button = {
							text = "trait_giant"
							datacontext = "[GetScriptedGui('gigantism')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/giant.dds"
							}
						}
						trait_button = {
							text = "trait_spindly"
							datacontext = "[GetScriptedGui('spindly')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/spindly.dds"
							}
						}
						trait_button = {
							text = "trait_hunchbacked"
							datacontext = "[GetScriptedGui('hunchbacked')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/hunchbacked.dds"
							}
						}

						widget = {
							size = { 0 12 }
						}


						trait_button = {
							text = "trait_maimed"
							datacontext = "[GetScriptedGui('maimed_left_arm')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/maimed.dds"
							}
						}
						trait_button = {
							text = "trait_one_legged"
							datacontext = "[GetScriptedGui('no_left_leg')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/one_legged.dds"
							}
						}
						trait_button = {
							text = "trait_clubfooted"
							datacontext = "[GetScriptedGui('clubfooted')]"
							blockoverride "icon" {
								texture = "gfx/interface/icons/traits/clubfooted.dds"
							}
						}

						widget = {
							size = { 0 12 }
						}
						button_category = {
							onclick = "[GetVariableSystem.Toggle('disturbing_traits')]"
							blockoverride "text" {
								text = "disturbing_traits"
							}
							blockoverride "frame" {
								frame = "[Select_int32( GetVariableSystem.Exists('disturbing_traits'), '(int32)2', '(int32)1')]"
							}
						}

						widget = {
							size = { 0 12 }
						}

						flowcontainer = {
							visible = "[GetVariableSystem.Exists('disturbing_traits')]"
							direction = vertical
							parentanchor = hcenter
							spacing = -2

							trait_button = {
								text = "trait_wounded_2"
								datacontext = "[GetScriptedGui('wounded_2')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/wounded_2.dds"
								}
							}
							trait_button = {
								text = "trait_wounded_3"
								datacontext = "[GetScriptedGui('wounded_3')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/wounded_3.dds"
								}
							}
							widget = {
								size = { 0 12 }
							}
							trait_button = {
								text = "trait_typhus"
								datacontext = "[GetScriptedGui('typhus')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/typhus.dds"
								}
							}
							trait_button = {
								text = "trait_lovers_pox"
								datacontext = "[GetScriptedGui('lovers_pox')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/lovers_pox.dds"
								}
							}
							trait_button = {
								text = "early_great_pox"
								datacontext = "[GetScriptedGui('mild')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/early_great_pox.dds"
								}
							}
							trait_button = {
								text = "trait_great_pox"
								datacontext = "[GetScriptedGui('severe')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/great_pox.dds"
								}
							}
							trait_button = {
								text = "trait_smallpox"
								datacontext = "[GetScriptedGui('smallpox')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/smallpox.dds"
								}
							}
							trait_button = {
								text = "trait_bubonic_plague"
								datacontext = "[GetScriptedGui('bubonic_plague')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/bubonic_plague.dds"
								}
							}
							trait_button = {
								text = "trait_scaly"
								datacontext = "[GetScriptedGui('scaly')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/scaly.dds"
								}
							}
							trait_button = {
								text = "trait_leper"
								datacontext = "[GetScriptedGui('leprosy')]"
								blockoverride "icon" {
									texture = "gfx/interface/icons/traits/leper.dds"
								}
							}
						}
					}
				}
			}
		}

		muscles = {
			blockoverride "text" {
				text = "weight"
			}
			blockoverride "value" {
				# text = "[Character.MakeScope.Var('weight').GetValue|0]"
				text = "[GuiScope.SetRoot( Character.MakeScope ).ScriptValue('barber_weight')|0%]"
			}
			# blockoverride "value2" {
			# 	# text = "[Character.MakeScope.Var('weight').GetValue|0]"
			# 	text = "[GuiScope.SetRoot( Character.MakeScope ).ScriptValue('current_weight_sval')|2]"
			# }
			blockoverride "minus" {
				enabled = "[GetScriptedGui('weight_minus').IsValid( GuiScope.SetRoot( Character.MakeScope ).End)]"
				onclick = "[GetScriptedGui('weight_minus').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
				onrightclick = "[GetScriptedGui('weight_minus').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
				onrightclick = "[GetScriptedGui('weight_minus').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
			}
			blockoverride "plus" {
				enabled = "[GetScriptedGui('weight_plus').IsValid( GuiScope.SetRoot( Character.MakeScope ).End)]"
				onclick = "[GetScriptedGui('weight_plus').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
				onrightclick = "[GetScriptedGui('weight_plus').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
				onrightclick = "[GetScriptedGui('weight_plus').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
			}
			blockoverride "reset" {
				onclick = "[GetScriptedGui('reset_weight').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
				onrightclick = "[GetScriptedGui('reset_weight').Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
				button_ignore = none
				enabled = "[GetScriptedGui('reset_weight').IsValid( GuiScope.SetRoot( Character.MakeScope ).End)]"

			}
		}

		muscles = {

		}
		widget = {
			size = { 0 5 }
		}
		button_FB_list = {
            tooltip = "naked_tt"
			text = "naked"
			blockoverride "margin" {
				margin_left = 40
			}
			datacontext = "[GetScriptedGui('undress')]"
			onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).End)]"
			visible = "[ScriptedGui.IsValid( GuiScope.SetRoot( Character.MakeScope ).End)]"
            down = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).End)]"
			button_checkbox = {
				parentanchor = vcenter
				position = { 3 0 }
				checked = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).End)]"
				alpha = 0.6
				alwaystransparent = yes
			}
		}
	}


    type barber_head_small = widget {
    	size = { 60 60 }
    	scale = 0.6

    	icon = {
    		size = { 90 90 }
    		position = { -15 -22 }
    		using = Background_Portrait_Glow
    		color = { 0.8 0.8 0.9 1.0 }
    		visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"

    		block "empty_character" {}
    		icon = {
    			size = { 180 90 }
    			using = Background_Portrait_Glow
    			color = { 0.8 0.7 0.55 0.3 }
    		}
    	}

    	portrait_button = {
    		parentanchor = bottom|hcenter
    		size = { 80 100 }
    		using = portrait_base
    		block "portrait_texture"
    		{
    			portrait_texture = "[Character.GetCachedPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
    		}
    		mask = "gfx/portraits/portrait_mask_head.dds"
    		effectname = "NoHighlight"

    		highlight_icon = {
    			name = "prison_bars"
    			visible = "[Character.IsImprisoned]"
    			size = { 80 88 }
    			parentanchor = bottom
    			effectname = "NoHighlight"
    			texture = "gfx/portraits/portrait_prison_head.dds"

    			modify_texture = {
    					name = "mask"
    				texture = "gfx/portraits/portrait_mask_head.dds"
    				spriteType = Corneredstretched
    				blend_mode = alphamultiply
    			}
    		}

    		block "portrait_button" {}
		}

		widget = {
			size = { 100% 100% }

			background = {
				texture = "gfx/portraits/portrait_rank.dds"
				margin = { -4 -4 }
				framesize = { 95 94 }
				frame = "[Character.GetPrimaryTitle.GetTierFrame]"
			}
		}

		block "coa" {
    		coa_realm_tiny = {
    			alwaystransparent = yes
    			tooltip_enabled = no
    			visible = "[Character.HasLandedTitles]"
    			parentanchor = bottom|left
    			position = { -7 5 }
    		}
		}

		widget = {
			size = { 100% 100% }
			block "empty_character" {}

			background = {
				texture = "gfx/portraits/portrait_frame.dds"
				using = Color_Grey
				margin = { -4 -4 }
				alpha = 0.4

				modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
						blend_mode = alphamultiply
				}
			}

			background = {
				visible = "[Character.IsHovered]"
				texture = "gfx/portraits/portrait_frame.dds"
				using = Color_Grey
				alpha = 0.7
				margin = { -4 -4 }
			}
		}

		# Portrait unknown glow
		highlight_icon = {
			name = "portrait_unknown_head_small_glow"
			parentanchor = center
			position = { 3 -9 }
			gfxtype = framedbuttongfx
			effectname = "NoHighlight"
			texture = "gfx/portraits/unknown_portraits/button_unknown_head.dds"
			size = { 80 100 }
			framesize = { 384 480 }
			upframe = 1
			overframe = 2
			block "glow_visible" {

				visible = "[Not(Character.IsValid)]"
			}

			block "glow_flip" {}

			block "onclick" {}
		}
    }

	type pose_tab = button_tab_vertical {
		size = { 100 50 }
		mirror = horizontal
        onclick = "[PdxGuiTriggerAllAnimations('left_panel_refresh')]"
		datacontext = "[GetScriptedGui('choose_pose')]"
		onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"

        down = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
        onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
        block "valid" {
            visible = "[Character.IsValid]"
        }

        button = {
            size = { 100% 100% }

            block "checkbox data" {
                datacontext = "[GetScriptedGui('add_to_barber')]"
            }
            onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
            onclick = "[GetScriptedGui('choose_pose').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
            visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
            enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
			onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
			button_ignore = none
        }


		button_ignore = none
		tooltip = "pose_tab_tt"

		# background = {
		# 	using = Background_Area
		# }

    	barber_head_small = {
    		position = { 5 7 }
    		parentanchor = vcenter
    		blockoverride "portrait_button" {
    			alwaystransparent = yes
    			tooltip_enabled = no
    		}
    	}

    	blockoverride "coa" {}

    	block "checkbox" {

    		button = {
                tooltip = "add_to_barber"
        		size = { 50 50 }
        		position = { 55 10 }
        		block "checkbox data" {
        			datacontext = "[GetScriptedGui('add_to_barber')]"
        		}
        		onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
        		visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"
        		enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).End)]"

        		button_checkbox = {
        			alwaystransparent = yes
        			checked = no
        		}
    		}

    		button = {
                tooltip = "remove_from_barber"
        		size = { 50 50 }
        		position = { 55 10 }

        		datacontext = "[GetScriptedGui('remove_from_barber')]"
        		onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).AddScope('new_root', PortraitCustomizationWindow.GetCharacter.MakeScope).End)]"
        		visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('character', Character.MakeScope).AddScope('new_root', PortraitCustomizationWindow.GetCharacter.MakeScope).End)]"

        		button_checkbox = {
        			alwaystransparent = yes
        			checked = yes
        		}
    		}
    	}
	}
}
